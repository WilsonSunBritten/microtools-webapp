@page "/microtools/{Id}"
@using MicrotoolsWebApp.Core.Models
@using MicrotoolsWebApp.Web.Services
@using MicrotoolsWebApp.Web.Components
@inject MicrotoolsService MicrotoolsService
@inject NavigationManager NavigationManager

<PageTitle>@(microtool?.Name ?? "Loading...")</PageTitle>

<div class="container mt-4">
    @if (loading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (error != null)
    {
        <div class="alert alert-danger">
            <strong>Error:</strong> @error
        </div>
    }
    else if (microtool == null)
    {
        <div class="alert alert-warning">
            Microtool not found.
        </div>
    }
    else
    {
        <div class="mb-4">
            <button class="btn btn-outline-secondary" @onclick="NavigateBack">
                <i class="bi bi-arrow-left"></i> Back to Microtools
            </button>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h2>@microtool.Name</h2>
            </div>
            <div class="card-body">
                <p class="lead">@microtool.Description</p>
                
                @if (microtool.Tags != null && microtool.Tags.Any())
                {
                    <div class="mb-3">
                        @foreach (var tag in microtool.Tags)
                        {
                            <span class="badge bg-secondary me-1">@tag</span>
                        }
                    </div>
                }
                
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Version:</strong> @microtool.Version</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Author:</strong> @microtool.Author</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h3>Microtool Interface</h3>
            </div>
            <div class="card-body">
                <DynamicUiForm UiSchema="microtool.UiSchema" MicrotoolId="@Id" />
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private MicrotoolDetails microtool;
    private bool loading = true;
    private string error;

    protected override async Task OnInitializedAsync()
    {
        await LoadMicrotool();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            await LoadMicrotool();
        }
    }

    private async Task LoadMicrotool()
    {
        try
        {
            loading = true;
            error = null;
            microtool = await MicrotoolsService.GetMicrotoolAsync(Id);
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
        finally
        {
            loading = false;
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/");
    }
}
